#!/bin/bash

# Default values
commit_message=""
repo_url=""
branch_name="main"
email=""
name=""
email_specified=false
name_specified=false

# Function to display the help message
help() {
    echo "Usage: autocommit --commit COMMIT_MESSAGE --repo REPO_URL [--branch BRANCH_NAME] [--email EMAIL] [--name NAME]"
    echo ""
    echo "Options:"
    echo "  --commit COMMIT_MESSAGE   Specify the commit message."
    echo "  --repo REPO_URL          Specify the GitHub repository URL."
    echo "  --branch BRANCH_NAME     Specify the branch name (default: main)."
    echo "  --email EMAIL            Specify the Git user email."
    echo "  --name NAME              Specify the Git user name."
    echo ""
    echo "Example:"
    echo "  autocommit --commit 'Initial commit' --repo 'https://yourgithub-repo.com' --branch 'main' --email 'your@email.com' --name 'Your Name'"
}

autocommit() {
    git init || { echo "Error: Git initialization failed"; exit 1; }
    git add --all || { echo "Error: Git add failed"; exit 1; }
    git commit -m "$commit_message" || { echo "Error: Git commit failed"; exit 1; }
    git branch -M "$branch_name" || { echo "Error: Git branch creation failed"; exit 1; }
    git remote add origin "$repo_url" || { echo "Error: Git remote addition failed"; exit 1; }
    git push -u origin "$branch_name" || { echo "Error: Git push failed"; exit 1; }
}

autocommit_git() {
    git add --all || { echo "Error: Git add failed"; exit 1; }
    git commit -m "$commit_message" || { echo "Error: Git commit failed"; exit 1; }
    git branch -M "$branch_name" || { echo "Error: Git branch creation failed"; exit 1; }
    git push -u origin "$branch_name" || { echo "Error: Git push failed"; exit 1; }
}

config() {
    git config --global user.email "$email"
    git config --global user.name "$name"
}

while [[ $# -gt 0 ]]; do
    case "$1" in
        --commit)
            if [ -n "$2" ]; then
                commit_message="$2"
                shift
            else
                echo "Error: '--commit' requires a commit message."
                exit 1
            fi
            ;;
        --repo)
            if [ -n "$2" ]; then
                repo_url="$2"
                shift
            else
                echo "Error: '--repo' requires a repository URL."
                exit 1
            fi
            ;;
        --branch)
            if [ -n "$2" ]; then
                branch_name="$2"
                shift
            else
                echo "Error: '--branch' requires a branch name."
                exit 1
            fi
            ;;
        --email)
            if [ -n "$2" ]; then
                email="$2"
                shift
                email_specified=true
            else
                echo "Error: '--email' requires an email address."
                exit 1
            fi
            ;;
        --name)
            if [ -n "$2" ]; then
                name="$2"
                shift
                name_specified=true
            else
                echo "Error: '--name' requires a name."
                exit 1
            fi
            ;;
        *)
            echo "Error: Unknown option: $1"
            help
            exit 1
            ;;
    esac
    shift
done

FILE=.git/
if [ -d "$FILE" ]; then
    if [ "$email_specified" = true ] && [ "$name_specified" = true ]; then
        config
        echo "Configuration Completed"
    else
        echo ".Git Already Exits! "
        autocommit_git
    fi
else
    if [ "$email_specified" = true ] && [ "$name_specified" = true ]; then
        config
    else
        autocommit
    fi
fi
